#!/bin/bash

# Show a menu of your recently used Git branches, allowing for a quick branch
# switch.
#
# Usage: gbrr
#
# Example:
#   $ gbrr
#   0) f_test-1
#   1) f_test-whatever
#   2) master
#   Switch to which branch? 1
#
#   + git checkout f_test-whatever
#   Switched to branch 'f_test-whatever'
#   Your branch is up-to-date with 'origin/f_test-whatever'.

COUNT=10

CURRENT_BRANCH=$(git symbolic-ref --short -q HEAD)

IFS=$'\r\n' BRANCHES=($(
	git reflog | \
	sed -n 's/.*checkout: moving from .* to \(.*\)/\1/p' | \
	perl -ne 'print unless $a{$_}++'
))

if [ ! -z "$CURRENT_BRANCH" ]; then
	for ((i = 0; i < ${#BRANCHES[@]}; i++)); do
		if [[ "${BRANCHES[$i]}" == "$CURRENT_BRANCH" || "${BRANCHES[$i]}" =~ ^[0-9a-f]{40}$ ]]; then
			unset BRANCHES[$i];
		fi
	done
	echo "Current branch: $CURRENT_BRANCH"
	BRANCHES=("${BRANCHES[@]}")
fi

BRANCHES=($(for f in "${BRANCHES[@]}"; do echo "$f"; done | head -n $COUNT))

for ((i = 0; i < ${#BRANCHES[@]}; i++)); do
	if [[ $i == $((COUNT-1)) ]]; then
		c=0;
	else
		c=$((i+1));
	fi
	echo "$c) ${BRANCHES[$i]}"
done

read -r -p "Switch to which branch? " -n 1
if [[ $REPLY != "" ]] && [[ ${BRANCHES[$REPLY]} != "" ]]; then
	if [[ $REPLY == 0 ]]; then
		REPLY=$((COUNT-1));
	else
		REPLY=$((REPLY-1));
	fi
	echo
	set -x
	git checkout "${BRANCHES[$REPLY]}"
else
	echo Aborted.
fi

